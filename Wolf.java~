/* [Wolf.java]
 * Wolf class for all wolves in eco system
 * @author Albert Quon
 * 05/06/2018
 */
import java.util.Random;
public class Wolf extends Animal implements Comparable {
  Random rand = new Random();
  
  /**
   * This method
   * @para
   * @return
   */
  Wolf(int health, int stamina) {
    super(health, stamina);
  }
  
  /**
   * This method
   * @para
   * @return
   */
  Wolf() {
    super();
  }
  
  /**
   * This method
   * @para
   * @return
   */
  void eat(Object animal) {
    if (((Organism)animal).getDisease()) {
      setDisease(((Organism)animal).getDisease());     
    }
    setHealth(getHealth() + ((Organism)animal).getHealth());
    //System.out.println(getHealth());
  } 
  
  /**
   * This method
   * @para
   * @return
   */
  void breed(Object wolf) { 
    setHealth(getHealth() + ((Organism)wolf).getHealth()); 
  }
  
  /**
   * This method
   * @para
   * @return
   */
  @Override
  int move(Object[][] vision) {
    setHealth(getHealth()-1);
    setStamina(getStamina()-1);
    int moveNum;
    vision[1][1] = null;
    for (int i = 0; i < vision[0].length; i++) {
      for (int j = 0; j < vision[0].length; j++) {
        if (((i != 2) && (j != 2)) || ((i != 0) && (j!=2)) || ((i != 0) && (j != 0)) || ((i != 2) && (j!=0))) {
          if (vision[i][j] instanceof Wolf && ((Organism)vision[i][j]).getHealth() > 20 && getHealth() > 20
                && ((Animal)vision[i][j]).getGender() == false && getGender() == true) {
            System.out.println("wolf breed");
            breed(vision[i][j]);
            return 10;
          }
          if (vision[i][j] instanceof Sheep) {
            eat(vision[i][j]);
            vision[i][j] = null;
            System.out.println("wolf eat sheep");
            if (i == 0) {
              //System.out.println("6");
              return 6;
            }
            else if (i == 2) {
              //System.out.println("5");
              return 5;
            }
            else if (j == 0) {
              //System.out.println("8");
              return 8;
            }
            else if (j == 2) {
              //System.out.println("7");
              return 7;
            }
          }
          if (vision[i][j] instanceof Wolf) {
            if (compareTo(vision[i][j]) == 1) {
              ((Organism)vision[i][j]).setHealth(((Organism)vision[i][j]).getHealth() - 10);
            }
            else if (compareTo(vision[i][j]) == -1) {
              setHealth(getHealth() - 10);
            } else {
              setHealth(getHealth() - 10);
              ((Organism)vision[i][j]).setHealth(((Organism)vision[i][j]).getHealth() - 10);
            }
            moveNum = rand.nextInt(3) + 5;
            return moveNum;
          }
          
          
        }
      }
    }
    moveNum = rand.nextInt(5);
    //System.out.println("random: " + moveNum);
    return moveNum;
  }
  
  /**
   * This method
   * @para
   * @return
   */
  @Override
  public int compareTo(Object animal) {
    int origWolf = getHealth();
    int secWolf = ((Organism)animal).getHealth();
    if (secWolf < origWolf) {
      return 1;
    }
    else if (secWolf > origWolf) {
      return -1;
    } else {
      return 0;
    }
  }
  
}